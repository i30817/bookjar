annotation.processing.enabled=true
annotation.processing.enabled.in.editor=true
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=bookjar
application.vendor=paulo
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/bookjar.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${reference.bookjar-util.jar}:\
    ${reference.bookjar-parser.jar}:\
    ${reference.bookjar-download.jar}:\
    ${reference.bookjar-decompress.jar}:\
    ${reference.bookjar-notifications.jar}:\
    ${libs.stringsearch.classpath}:\
    ${libs.junrar.classpath}:\
    ${libs.cngram.classpath}:\
    ${libs.juniversalchardet.classpath}:\
    ${libs.tagsoup.classpath}:\
    ${libs.swingx.classpath}:\
    ${libs.glazedlists.classpath}:\
    ${libs.simple-validation.classpath}:\
    ${libs.lucene.classpath}:\
    ${libs.org-openide-utilities.classpath}:\
    ${libs.log4j2.classpath}:\
    ${libs.google-books.classpath}:\
    ${libs.commons-digester.classpath}
# Space-separated list of extra javac options
javac.compilerargs=-g
javac.deprecation=false
javac.external.vm=false
javac.modulepath=
javac.processormodulepath=
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit4.classpath}
javac.test.modulepath=\
    ${javac.modulepath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.html5=false
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jlink.launcher=false
jlink.launcher.name=bookjar
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=i3.main.Bookjar
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.bookjar-decompress=subprojects/bookjar-decompress
project.bookjar-download=subprojects/bookjar-download
project.bookjar-notifications=subprojects/bookjar-notifications
project.bookjar-parser=subprojects/bookjar-parser
project.bookjar-util=subprojects/bookjar-util
reference.bookjar-decompress.jar=${project.bookjar-decompress}/dist/bookjar-decompress.jar
reference.bookjar-download.jar=${project.bookjar-download}/dist/bookjar-download.jar
reference.bookjar-notifications.jar=${project.bookjar-notifications}/dist/bookjar-notifications.jar
reference.bookjar-parser.jar=${project.bookjar-parser}/dist/bookjar-parser.jar
reference.bookjar-util.jar=${project.bookjar-util}/dist/bookjar-util.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
